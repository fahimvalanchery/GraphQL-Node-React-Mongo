{"version":3,"sources":["context/auth-context.js","pages/Auth.js","components/modal/modal.js","components/backdrop/backdrop.js","components/events/eventList/eventItem/eventItem.js","components/events/eventList/eventList.js","components/spinner/spinner.js","pages/Events.js","components/bookings/bookingList/bookingList.js","pages/Bookings.js","components/Navigation/MainNavigation.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","token","userId","login","tokenExpiration","logout","AuthPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLogin","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","status","Error","json","resData","data","context","catch","err","console","log","createRef","react_default","a","createElement","className","onSubmit","htmlFor","type","id","ref","onClick","Component","contextType","AuthContext","modal","title","children","canCancel","onCancel","canConfirm","onConfirm","confirmText","backdrop","eventItem","key","eventId","price","Date","date","toLocaleDateString","creatorId","onDetail","bind","eventList","events","map","authUserId","eventList_eventItem_eventItem","_id","creator","onViewDetail","spinner","EventsPage","creating","isLoading","selectedEvent","isActive","startCreateEventHandler","modalConfirmHandler","titleRef","parseFloat","priceRef","dateRef","description","descriptionRef","desc","Authorization","updatedEvents","toConsumableArray","push","createEvent","modalCancelHandler","bookEventHandler","fetchEvents","showDetailHandler","find","e","Fragment","components_backdrop_backdrop","components_modal_modal","rows","components_spinner_spinner","events_eventList_eventList","bookingList","bookings","booking","createdAt","onDelete","BookingsPage","fetchBookings","deleteBookingHandler","bookingId","filter","bookings_bookingList_bookingList","mainNavigation","auth_context","Consumer","react_router_dom","to","App","Provider","Navigation_MainNavigation","react_router","from","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85b93ed6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default React.createContext({\r\n  token: null,\r\n  userId: null,\r\n  login: (token, userId, tokenExpiration) => {},\r\n  logout: () => {}\r\n});\r\n","import React, { Component } from 'react';\r\n\r\nimport './Auth.css';\r\n\r\nimport AuthContext from '../context/auth-context';\r\n\r\nclass AuthPage extends Component {\r\n  state = {\r\n    isLogin: true\r\n  };\r\n\r\n  static contextType = AuthContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.emailEl = React.createRef();\r\n    this.passwordEl = React.createRef();\r\n  }\r\n\r\n  switchModeHandler = () => {\r\n    this.setState(prevState => {\r\n      return { isLogin: !prevState.isLogin };\r\n    });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    const email = this.emailEl.current.value;\r\n    const password = this.passwordEl.current.value;\r\n\r\n    if (email.trim().length === 0 || password.trim().length === 0) {\r\n      return;\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `\r\n      query Login($email:String!,$password:String!){\r\n        login(email:$email,\r\n        password:$password){\r\n          userId,\r\n          token,\r\n          tokenExpiration\r\n        }\r\n      }\r\n      `,\r\n      variables: {\r\n        email: email,\r\n        password: password\r\n      }\r\n    };\r\n\r\n    if (!this.state.isLogin) {\r\n      const requestBody = {\r\n        query: `\r\n        mutation CreateUser($email:String!,$password:String!){\r\n          createUser(userInput:{\r\n            email:$email,\r\n            password:$email\r\n          })\r\n          {\r\n            _id,\r\n            email\r\n          }\r\n        }\r\n        `,\r\n        variables: {\r\n          email: email,\r\n          password: password\r\n        }\r\n      };\r\n    }\r\n\r\n    fetch('/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        if (resData.data.login.token) {\r\n          this.context.login(\r\n            resData.data.login.token,\r\n            resData.data.login.userId,\r\n            resData.data.login.tokenExpiration\r\n          );\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"email\"> EMail</label>\r\n          <input type=\"email\" id=\"email\" ref={this.emailEl} />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"password\"> Password</label>\r\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\r\n        </div>\r\n        <div className=\"form-actions\">\r\n          <button type=\"submit\">Submit</button>\r\n          <button type=\"button\" onClick={this.switchModeHandler}>\r\n            Switch to {this.state.isLogin ? 'SignUp' : 'Login'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthPage;\r\n","import React from 'react';\r\n\r\nimport './modal.css';\r\n\r\nconst modal = props => (\r\n  <div className=\"modal\">\r\n    <header className=\"modal__header\">\r\n      <h1>{props.title}</h1>\r\n    </header>\r\n    <section className=\"modal__content\">{props.children}</section>\r\n    <section className=\"modal__actions\">\r\n      {props.canCancel && (\r\n        <button className=\"btn\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n      )}\r\n      {props.canConfirm && (\r\n        <button className=\"btn\" onClick={props.onConfirm}>\r\n          {props.confirmText}\r\n        </button>\r\n      )}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nexport default modal;\r\n","import React from 'react';\r\nimport './backdrop.css';\r\nconst backdrop = props => <div className=\"backdrop\" />;\r\n\r\nexport default backdrop;\r\n","import React from 'react';\r\nimport './eventItem.css';\r\nconst eventItem = props => (\r\n  <li key={props.eventId} className=\"event__list-item\">\r\n    <div>\r\n      <h1>{props.title}</h1>\r\n      <h2>\r\n        {props.price} - {new Date(props.date).toLocaleDateString()}\r\n      </h2>\r\n    </div>\r\n    <div>\r\n      {props.userId === props.creatorId ? (\r\n        <p>You are the Owner of the event</p>\r\n      ) : (\r\n        <button\r\n          className=\"btn\"\r\n          onClick={props.onDetail.bind(this, props.eventId)}\r\n        >\r\n          View Details\r\n        </button>\r\n      )}\r\n    </div>\r\n  </li>\r\n);\r\n\r\nexport default eventItem;\r\n","import React from 'react';\r\nimport './eventList.css';\r\nimport EventItem from './eventItem/eventItem';\r\nconst eventList = props => {\r\n  const events = props.events.map(event => {\r\n    console.log(props.authUserId);\r\n    return (\r\n      <EventItem\r\n        key={event._id}\r\n        eventId={event._id}\r\n        title={event.title}\r\n        price={event.price}\r\n        date={event.date}\r\n        userId={props.authUserId}\r\n        creatorId={event.creator._id}\r\n        onDetail={props.onViewDetail}\r\n      />\r\n    );\r\n  });\r\n  return <ul className=\"event__list\">{events}</ul>;\r\n};\r\n\r\nexport default eventList;\r\n","import React from 'react';\r\nimport './spinner.css';\r\nconst spinner = () => (\r\n  <div className=\"spinner\">\r\n    <div className=\"lds-dual-ring\" />\r\n  </div>\r\n);\r\n\r\nexport default spinner;\r\n","import React, { Component } from 'react';\r\nimport './Events.css';\r\nimport Modal from '../components/modal/modal';\r\nimport BackDrop from '../components/backdrop/backdrop';\r\n\r\nimport AuthContext from '../context/auth-context';\r\nimport EventList from '../components/events/eventList/eventList';\r\nimport Spinner from '../components/spinner/spinner';\r\n\r\nclass EventsPage extends Component {\r\n  state = {\r\n    creating: false,\r\n    events: [],\r\n    isLoading: false,\r\n    selectedEvent: null\r\n  };\r\n\r\n  isActive = true;\r\n\r\n  static contextType = AuthContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.titleRef = React.createRef();\r\n    this.priceRef = React.createRef();\r\n    this.dateRef = React.createRef();\r\n    this.descriptionRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchEvents();\r\n  }\r\n\r\n  startCreateEventHandler = () => {\r\n    this.setState({ creating: true });\r\n  };\r\n  modalConfirmHandler = () => {\r\n    this.setState({ creating: false });\r\n    const title = this.titleRef.current.value;\r\n    const price = parseFloat(this.priceRef.current.value);\r\n    const date = this.dateRef.current.value;\r\n    const description = this.descriptionRef.current.value;\r\n\r\n    if (\r\n      title.trim().length === 0 ||\r\n      price <= 0 ||\r\n      date.trim().length === 0 ||\r\n      description.trim().length === 0\r\n    ) {\r\n      return;\r\n    }\r\n    const event = { title, price, date, description };\r\n    console.log(event);\r\n\r\n    const requestBody = {\r\n      query: `\r\n        mutation CreateEvent($title:String!,$desc:String!,$price:Float!,$date:String!){\r\n          createEvent(eventInput:{\r\n            title:$title,\r\n            price:$price,\r\n            date:$date,\r\n            description:$description,\r\n          })\r\n          {\r\n            _id,\r\n            title,\r\n            price,\r\n            date,\r\n            description\r\n            \r\n          }\r\n        }\r\n        `,\r\n      variables: {\r\n        title: title,\r\n        desc: description,\r\n        price: price,\r\n        date: date\r\n      }\r\n    };\r\n\r\n    const token = this.context.token;\r\n\r\n    fetch('/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        this.setState(prevState => {\r\n          const updatedEvents = [...prevState.events];\r\n          updatedEvents.push({\r\n            _id: resData.data.createEvent._id,\r\n            title: resData.data.createEvent.title,\r\n            description: resData.data.createEvent.description,\r\n            date: resData.data.createEvent.date,\r\n            price: resData.data.createEvent.price,\r\n            creator: {\r\n              _id: this.context.userId.AuthContext\r\n            }\r\n          });\r\n          return { events: updatedEvents };\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  modalCancelHandler = () => {\r\n    this.setState({ creating: false, selectedEvent: null });\r\n  };\r\n\r\n  bookEventHandler = () => {\r\n    if (!this.context.token) {\r\n      this.setState({ selectedEvent: null });\r\n      return;\r\n    }\r\n    const requestBody = {\r\n      query: `\r\n      mutation BookEvent($id:ID!){\r\n        bookEvent(eventId:$id)\r\n        {\r\n          _id\r\n         createdAt\r\n         updatedAt\r\n        }\r\n      }\r\n      `,\r\n      variables: {\r\n        id: this.state.selectedEvent._id\r\n      }\r\n    };\r\n    const token = this.context.token;\r\n    fetch('/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        console.log(resData);\r\n        this.setState({ selectedEvent: null });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  fetchEvents = () => {\r\n    this.setState({ isLoading: true });\r\n    const requestBody = {\r\n      query: `\r\n      query{\r\n        events\r\n        {\r\n          _id,\r\n          title,\r\n          price,\r\n          date,\r\n          description\r\n          creator{\r\n            _id\r\n            email\r\n          }\r\n        }\r\n      }\r\n      `\r\n    };\r\n\r\n    fetch('/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        const events = resData.data.events;\r\n        if (this.isActive) {\r\n          this.setState({ events: events, isLoading: false });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (this.isActive) {\r\n          this.setState({ isLoading: false });\r\n        }\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  showDetailHandler = eventId => {\r\n    this.setState(prevState => {\r\n      const selectedEvent = prevState.events.find(e => e._id === eventId);\r\n      return { selectedEvent: selectedEvent };\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.isActive = false;\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {(this.state.creating || this.state.selectedEvent) && <BackDrop />}\r\n        {this.state.creating && (\r\n          <Modal\r\n            title=\"Add Event\"\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.modalConfirmHandler}\r\n            confirmText=\"Confirm\"\r\n          >\r\n            <form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input type=\"text\" id=\"title\" ref={this.titleRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input type=\"number\" id=\"price\" ref={this.priceRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"date\">Date</label>\r\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateRef} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"descritpion\">Description</label>\r\n                <textarea rows=\"4\" id=\"descritpion\" ref={this.descriptionRef} />\r\n              </div>\r\n            </form>\r\n          </Modal>\r\n        )}\r\n        {this.state.selectedEvent && (\r\n          <Modal\r\n            title={this.state.selectedEvent.title}\r\n            canCancel\r\n            canConfirm\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.bookEventHandler}\r\n            confirmText={this.context.token ? 'Book' : 'Confirm'}\r\n          >\r\n            <h1>{this.state.selectedEvent.title}</h1>\r\n            <h2>\r\n              {this.state.selectedEvent.price} -{' '}\r\n              {new Date(this.state.selectedEvent.title).toLocaleDateString()}\r\n            </h2>\r\n            <p>{this.state.selectedEvent.description}</p>\r\n          </Modal>\r\n        )}\r\n        {this.context.token && (\r\n          <div className=\"events-control\">\r\n            <p>Share Your Own Events</p>\r\n            <button className=\"btn\" onClick={this.startCreateEventHandler}>\r\n              Create Event\r\n            </button>\r\n          </div>\r\n        )}\r\n        {this.state.isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <EventList\r\n            events={this.state.events}\r\n            authUserId={this.context.userId}\r\n            onViewDetail={this.showDetailHandler}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventsPage;\r\n","import React from 'react';\r\nimport './bookingList.css';\r\nconst bookingList = props => (\r\n  <ul className=\"bookings__list\">\r\n    {props.bookings.map(booking => {\r\n      return (\r\n        <li key={booking._id} className=\"bookings__item\">\r\n          <div className=\"bookings__item-data\">\r\n            {booking.event.title} -{' '}\r\n            {new Date(booking.createdAt).toLocaleDateString()}\r\n          </div>\r\n          <div className=\"bookings__item-actions\">\r\n            <button\r\n              className=\"btn\"\r\n              onClick={props.onDelete.bind(this, booking._id)}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </li>\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default bookingList;\r\n","import React, { Component } from 'react';\r\nimport AuthContext from '../context/auth-context';\r\nimport Spinner from '../components/spinner/spinner';\r\nimport BookingList from '../components/bookings/bookingList/bookingList';\r\n\r\nclass BookingsPage extends Component {\r\n  state = {\r\n    isLoading: false,\r\n    bookings: []\r\n  };\r\n\r\n  static contextType = AuthContext;\r\n  componentDidMount() {\r\n    this.fetchBookings();\r\n  }\r\n\r\n  fetchBookings = () => {\r\n    this.setState({ isLoading: true });\r\n    const requestBody = {\r\n      query: `\r\n      query{\r\n        bookings\r\n        {\r\n          _id,\r\n          createdAt,\r\n          updatedAt,\r\n          event{\r\n            _id\r\n            title\r\n            date\r\n          }\r\n        }\r\n      }\r\n      `\r\n    };\r\n\r\n    const token = this.context.token;\r\n    fetch('/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        const bookings = resData.data.bookings;\r\n        this.setState({ bookings: bookings, isLoading: false });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ isLoading: false });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  deleteBookingHandler = bookingId => {\r\n    const requestBody = {\r\n      query: `\r\n      mutation CancelBooking($id:ID!){\r\n        cancelBooking(bookingId:$id)\r\n        {\r\n          _id\r\n          title\r\n        }\r\n      }\r\n      `,\r\n      variables: {\r\n        id: bookingId\r\n      }\r\n    };\r\n\r\n    const token = this.context.token;\r\n    fetch('/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'Bearer ' + token\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          throw new Error('Failed');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(resData => {\r\n        this.setState(prevState => {\r\n          const updatedBooking = prevState.bookings.filter(booking => {\r\n            return booking._id !== bookingId;\r\n          });\r\n          return { bookings: updatedBooking, isLoading: false };\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({ isLoading: false });\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <BookingList\r\n            bookings={this.state.bookings}\r\n            onDelete={this.deleteBookingHandler}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookingsPage;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './MainNavigation.css';\r\nimport AuthContext from '../../context/auth-context';\r\n\r\nconst mainNavigation = props => (\r\n  <AuthContext.Consumer>\r\n    {context => {\r\n      return (\r\n        <header className=\"main-navigation\">\r\n          <div className=\"main-navigation__logo\">\r\n            <h1>EasyEvent</h1>\r\n          </div>\r\n          <nav className=\"main-navigation__item\">\r\n            <ul>\r\n              {!context.token && (\r\n                <li>\r\n                  <NavLink to=\"/auth\">Authenticate</NavLink>\r\n                </li>\r\n              )}\r\n              <li>\r\n                <NavLink to=\"/events\">Events</NavLink>\r\n              </li>\r\n              {context.token && (\r\n                <React.Fragment>\r\n                  <li>\r\n                    <NavLink to=\"/bookings\">Bookings</NavLink>\r\n                  </li>\r\n                  <li>\r\n                    <button onClick={context.logout}>Log Out</button>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n      );\r\n    }}\r\n  </AuthContext.Consumer>\r\n);\r\n\r\nexport default mainNavigation;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport AuthPage from './pages/Auth';\r\nimport EventsPage from './pages/Events';\r\nimport BookingsPage from './pages/Bookings';\r\n\r\nimport MainNavigation from './components/Navigation/MainNavigation';\r\nimport AuthContext from './context/auth-context';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    token: null,\r\n    userId: null\r\n  };\r\n\r\n  login = (token, userId, tokenExpiration) => {\r\n    this.setState({ token: token, userId: userId });\r\n  };\r\n  logout = () => {\r\n    this.setState({ token: null, userId: null });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <React.Fragment>\r\n          <AuthContext.Provider\r\n            value={{\r\n              token: this.state.token,\r\n              userId: this.state.userId,\r\n              login: this.login,\r\n              logout: this.logout\r\n            }}\r\n          >\r\n            <MainNavigation />\r\n            <main className=\"main-content\">\r\n              <Switch>\r\n                {!this.state.token && (\r\n                  <Redirect from=\"/bookings\" to=\"/auth\" exact />\r\n                )}\r\n                {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\r\n                {this.state.token && (\r\n                  <Redirect from=\"/auth\" to=\"/events\" exact />\r\n                )}\r\n                {!this.state.token && (\r\n                  <Route path=\"/auth\" component={AuthPage} />\r\n                )}\r\n\r\n                <Route path=\"/events\" component={EventsPage} />\r\n                {this.state.token && (\r\n                  <Route path=\"/bookings\" component={BookingsPage} />\r\n                )}\r\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\r\n              </Switch>\r\n            </main>\r\n          </AuthContext.Provider>\r\n        </React.Fragment>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}